# ðŸ”§ PRODUCTION: .github/workflows/deploy-backend.yml
name: Deploy Backend to DigitalOcean

on:
  push:
    branches: [ main ]
    paths: [ 'backend/**' ]
  workflow_dispatch:

env:
  REGISTRY: registry.digitalocean.com
  IMAGE_NAME: medical-backend

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:6.0
        env:
          MONGO_INITDB_ROOT_USERNAME: admin
          MONGO_INITDB_ROOT_PASSWORD: password
        ports:
          - 27017:27017
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install dependencies
      working-directory: ./backend
      run: npm ci

    - name: Run tests
      working-directory: ./backend
      env:
        NODE_ENV: test
        MONGODB_URI: mongodb://admin:password@localhost:27017/medical_test?authSource=admin
        REDIS_URL: redis://localhost:6379
      run: npm test

    - name: Run linting
      working-directory: ./backend
      run: npm run lint

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    - name: Log in to DigitalOcean Container Registry
      run: doctl registry login --expiry-seconds 1200

    - name: Build Docker image
      working-directory: ./backend
      run: |
        docker build \
          --build-arg NODE_ENV=production \
          --tag $REGISTRY/${{ secrets.DO_REGISTRY_NAME }}/$IMAGE_NAME:$GITHUB_SHA \
          --tag $REGISTRY/${{ secrets.DO_REGISTRY_NAME }}/$IMAGE_NAME:latest \
          .

    - name: Push Docker image
      run: |
        docker push $REGISTRY/${{ secrets.DO_REGISTRY_NAME }}/$IMAGE_NAME:$GITHUB_SHA
        docker push $REGISTRY/${{ secrets.DO_REGISTRY_NAME }}/$IMAGE_NAME:latest

    - name: Deploy to DigitalOcean App Platform
      run: |
        doctl apps create-deployment ${{ secrets.DO_BACKEND_APP_ID }} \
          --wait \
          --format ID,Status,UpdatedAt

    - name: Verify deployment
      run: |
        echo "ðŸš€ Backend deployed successfully!"
        echo "Image: $REGISTRY/${{ secrets.DO_REGISTRY_NAME }}/$IMAGE_NAME:$GITHUB_SHA"